function var = GET_EPH(tow,prn,string)
% var = GET_EPH(gps_seconds,prn,string)
% 
% Generates ephemerides data from pre-generated look-up tables. The LUT is 
% read from a file called Coef.mat, generated by GenEphLUT. Since the function
% will be callad multiple times the LUT is keept as a persistent variable. Care must 
% be taken to update this if the file is changes.
% 
% Input:
%      gps_seconds:    The GPS time in seconds
%              prn:    Which PRN to get data for
%           string:    String specifying which data to return,
%                      'pos' gives position
%                      'vel' gives velocity
%                      'dClk' gives clock offset
% 
% Output:
%              var:     [1x3] for 'vel' and 'pos', scalar for dClk

global INITIALIZE RECEIVER_FILE
persistent Coef

%Make sure LUT is loaded.
if ~exist('Coef','var') || INITIALIZE
    load(RECEIVER_FILE);
    if Rec.EphType == 0
        error('RAIN:NavData','Eph LUT is empty.')
    end
    Coef = Rec.Eph;
    clear('Rec');
end

%Extract fitting polynom parameters.
N = Coef.N; 
M = Coef.M;

%Find the first index. Max allowed offset is (M-1)/2 [15 minutes].
ind = find(Coef.GPSTime>(tow-(M-1)*15*60/2),1);

%Throw an error if no valid data point was found.
if isempty(ind) || Coef.GPSTime(ind)>(tow+(M-1)*15*60/2)
    error('No datapoint available for time:\n%s', tow)
end

%Get x in the correct time base. See GEN_EPH_LUT for details.
centerTime = Coef.GPSTime(ind);
x = tow - centerTime;
x = x/(15*60);
x = 2*x/N;

switch string
    case 'pos'
        x = x.^(N:-1:0);
        var = zeros(1,3);
        
        var(1) = x*reshape(Coef.X(prn,ind,:),[N+1,1]);
        var(2) = x*reshape(Coef.Y(prn,ind,:),[N+1,1]);
        var(3) = x*reshape(Coef.Z(prn,ind,:),[N+1,1]);
    case 'vel'
        x = x.^(N-1:-1:0);  %this is the derivative of position
        x = (N:-1:1).*x;
        x = x*2/(N*15*60);  %this is neecesary due the the time base of x
        var = zeros(1,3);
        
        var(1) = x*reshape(Coef.X(prn,ind,1:N),[N,1]);
        var(2) = x*reshape(Coef.Y(prn,ind,1:N),[N,1]);
        var(3) = x*reshape(Coef.Z(prn,ind,1:N),[N,1]);
        
   case 'dClk'
        x = x.^(N:-1:0);
        
        var = x*reshape(Coef.dClk(prn,ind,:),[N+1,1]);
        
   case 'dClkdt'
        x = x.^(N-1:-1:0);  %this is the derivative of clock error
        x = (N:-1:1).*x;
        x = x*2/(N*15*60);  %this is neecesary due the the time base of x
        
        var = x*reshape(Coef.dClk(prn,ind,1:N),[N,1]);
    otherwise
        error('No ephemerides for "%s"',string)
end

        